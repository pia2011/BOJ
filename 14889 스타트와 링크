import java.io.*;
import java.util.*;
public class Main {

	private static int getSum(int num[]) {
		int result = 0;	
		for(int i = 1; i<=N/2; i++) {
			for(int j = i+1; j<=N/2; j++) {
				result+=arr[num[i]][num[j]];
				result+=arr[num[j]][num[i]];
			}			
		}
		
		return result;
	}
	private static void solve2() {
		int ai = 1, bi = 1;		
		for(int i = 1; i<=N; i++) {			
			if(visited[i]) { 
				a[ai++] = i;
			}else {
				b[bi++] = i;
			}
		}
		int dif = Math.abs(getSum(a) - getSum(b));
		if(min > dif)
			min = dif;
		// 2개씩 골라 조합으로 
	}
	private static void solve(int cnt, int start) {
		// 기저사례
		if(cnt == 0) {
			solve2();
			return; 	
		}
		for(int i = start+1; i<=N; i++) {			
			if(!visited[i]) {				
			
				visited[i] = true;
						
				solve(cnt-1, i);			
				// 백트래킹
				visited[i] = false;
			}
		}
	}
	private static int min = Integer.MAX_VALUE;
	private static int N;
	private static boolean visited[];
	private static int a[],b[];
	private static int arr[][];
	public static void main(String[] args) throws IOException {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

		N = Integer.parseInt(br.readLine());
		arr = new int[N+1][N+1];
		a = new int[N/2+1];
		b = new int[N/2+1];
		visited = new boolean[N+1];
		for(int i = 1; i<=N; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			for(int j = 1; j<=N; j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
			}
		}		
		solve(N/2, 1);
		System.out.println(min);
	}
}
